{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Section/Section.js","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-operations.js","components/Form/Form.js","redux/Phonebook/phonebook-selectors.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Section","title","children","prototype","PropTypes","string","isRequired","element","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","Form","state","name","number","formInputId","uuidv4","handleChange","e","currentTarget","value","setState","id","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","form_libel","formInput","type","onChange","placeholder","pattern","required","formTitle","button","Component","connect","dispatch","contact","post","then","data","console","log","catch","error","addContact","getLoading","contacts","loading","getVisibleContacts","createSelector","items","filter","normalizedFilter","toLowerCase","includes","Contacts","onRemoveContact","map","contacts_item","contacts_button","onClick","func","arrayOf","shape","isLoadingContacts","delete","deleteContact","onfetchContacts","get","Filter","onChangeFilter","filter_label","filter_input","target","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e7d370a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2OUrn\",\"form_libel\":\"Form_form_libel__1Gqii\",\"formInput\":\"Form_formInput__BQHYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__1ZAom\",\"contacts_item\":\"Contacts_contacts_item__3SQXk\",\"contacts_button\":\"Contacts_contacts_button__2FSwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__1olIp\",\"filter_input\":\"Filter_filter_input__1RoYB\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import { createAction } from \"@reduxjs/toolkit\";\n\n// const addContact = createAction(\"contact/add\", ({ name, number }) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\n// export const fetchContacts = () => async (dispatch) => {\r\n//   dispatch(fetchContactRequest());\r\n//   try {\r\n//     const { data } = await axios.get(\"/contacts\");\r\n//     dispatch(fetchContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactError(error));\r\n//   }\r\n// };\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n    dispatch(addContactRequest());\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => {\r\n        dispatch(addContactSuccess(data));\r\n        console.log(data);\r\n      })\r\n      .catch((error) => dispatch(addContactError(error)));\r\n  };\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/Phonebook/phonebook-operations\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./Form.module.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  formInputId = uuidv4();\n\n  handleChange = (e) => {\n    // console.log(e.currentTarget);\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n    this.setState({ id: this.formInputId });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className={styles.form}\n        id={this.formInputId}\n        onSubmit={this.handleSubmit}\n      >\n        <label className={styles.form_libel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Enter name\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={styles.formTitle}>\n          Number\n          <input\n            className={styles.formInput}\n            type=\"tel\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            placeholder=\"Enter number\"\n            name=\"number\"\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={styles.button} name=\"add\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\nexport default connect(null, mapDispatchToProps)(Form);\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.loading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/Phonebook/phonebook-operations\";\nimport { fetchContacts } from \"../../redux/Phonebook/phonebook-operations\";\nimport {\n  getLoading,\n  getVisibleContacts,\n} from \"../../redux/Phonebook/phonebook-selectors\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Contacts.module.css\";\n\nconst Contacts = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={styles.contacts}>\n      {contacts.map((contact) => (\n        <li className={styles.contacts_item} key={contact.id}>\n          {contact.name + \" : \" + contact.number}\n          {\n            <div>\n              <button\n                className={styles.contacts_button}\n                type=\"button\"\n                name=\"delete\"\n                onClick={() => {\n                  onRemoveContact(contact.id);\n                }}\n              >\n                delete\n              </button>\n            </div>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.prototype = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getVisibleContacts(state),\n  isLoadingContacts: getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemoveContact: (id) => dispatch(deleteContact(id)),\n  onfetchContacts: () => dispatch(fetchContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/Phonebook/phonebook-actions\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <label className={styles.filter_label}>\n    Find contacts by name\n    <input\n      className={styles.filter_input}\n      type=\"text\"\n      value={value}\n      onChange={onChangeFilter}\n    />\n  </label>\n);\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeFilter: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Form from \"./components/Form\";\nimport Contacts from \"./components/Contacts\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <Contacts />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./phonebook-actions\";\n\n// const contacts = [];\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  // [addContactSuccess]: (state, { payload }) => {\n  //   if (state.map((contact) => contact.name).includes(payload.name)) {\n  //     return alert(`${payload.name} is already exist`);\n  //   }\n  //   return [...state, payload];\n  // },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./Phonebook/phonebook-reducer\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n// console.log(store);\n// console.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}